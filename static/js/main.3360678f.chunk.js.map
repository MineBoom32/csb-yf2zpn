{"version":3,"sources":["MPlayer/MusicList.js","MPlayer/PlayWidget.js","MPlayer/MusicVis.js","MPlayer/MusicPlayer.js","App.js","index.js"],"names":["MusicList","props","tracksEls","tracks","map","track","className","curPlaying","id","onClick","onSelected","title","PlayWidget","audioRef","useRef","useState","audInterval","setAudInterval","controls","ref","src","currentTrack","url","onPlay","audi","setInterval","progress","current","currentTime","duration","setCurProgress","onPause","clearInterval","MusicVis","r","size","cx","cy","fill","MusicPlayer","setTracks","setCurPlaying","curProgress","useEffect","fetch","then","response","json","data","foundTrack","find","trackSelected","App","rootElement","document","getElementById","createRoot","render"],"mappings":"gMAGe,SAASA,EAAUC,GAChC,IAAIC,EAAYD,EAAME,OAAOC,KAAI,SAACC,GAAK,OACrC,qBAEEC,UAAWL,EAAMM,WAAWC,IAAMH,EAAMG,GAAK,SAAW,GACxDC,QAAS,WACPR,EAAMS,WAAWL,EAAMG,GACzB,EAAE,SAEDH,EAAMM,OANFN,EAAMG,GAOP,IAGR,OAAO,8BAAMN,GACf,CCfe,SAASU,EAAWX,GACjC,IAAMY,EAAWC,mBACjB,EAAsCC,mBAAS,GAAE,mBAA1CC,EAAW,KAAEC,EAAc,KAElC,OACE,8BACE,uBACEC,UAAQ,EACRC,IAAKN,EACLO,IAAKnB,EAAMoB,aAAaC,IACxBC,OAAQ,WACN,IAAIC,EAAOC,aAAY,WACrB,IAAIC,EACFb,EAASc,QAAQC,YAAcf,EAASc,QAAQE,SAElD5B,EAAM6B,eAAeJ,EACvB,GAAG,KAEHT,EAAeO,EACjB,EACAO,QAAS,WACPC,cAAchB,EAChB,KAIR,CC1Be,SAASiB,EAAShC,GAC/B,OACE,8BACE,gCACE,wBAAQiC,EAAGjC,EAAMkC,KAAMC,GAAG,MAAMC,GAAG,MAAMC,KAAK,SAC9C,wBACEJ,EAAGjC,EAAMyB,SAAWzB,EAAMkC,KAC1BC,GAAG,MACHC,GAAG,MACHC,KAAK,gBAKf,CCXe,SAASC,EAAYtC,GAClC,MAA4Bc,mBAAS,IAAG,mBAAjCZ,EAAM,KAAEqC,EAAS,KACxB,EAAoCzB,mBAAS,CAAC,GAAE,mBAAzCR,EAAU,KAAEkC,EAAa,KAChC,EAAsC1B,mBAAS,GAAE,mBAA1C2B,EAAW,KAAEZ,EAAc,KAUlC,OARAa,qBAAU,WACRC,MAAM,mBACHC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACLR,EAAUQ,EACZ,GACJ,IAGE,gCACE,8CACA,gDAAmBzC,EAAWI,SAC9B,uBACA,cAACX,EAAS,CACRG,OAAQA,EACRI,WAAYA,EACZG,WAAY,SAACF,IAWnB,SAAuBA,GAErB,IAAMyC,EAAa9C,EAAO+C,MAAK,SAAC7C,GAAK,OAAKA,EAAMG,IAAMA,CAAE,IAExDiC,EAAcQ,EAChB,CAfQE,CAAc3C,EAChB,IAEF,uBACA,cAACI,EAAU,CAACS,aAAcd,EAAYuB,eAAgBA,IACtD,cAACG,EAAQ,CAACE,KAAM,GAAIT,SAAUgB,MAWpC,CCxCe,SAASU,IACtB,OACE,qBAAK9C,UAAU,MAAK,SAClB,cAACiC,EAAW,KAGlB,CCJA,IAAMc,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACL,EAAG,M","file":"static/js/main.3360678f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./music.css\";\r\n\r\nexport default function MusicList(props) {\r\n  let tracksEls = props.tracks.map((track) => (\r\n    <div\r\n      key={track.id}\r\n      className={props.curPlaying.id == track.id ? \"active\" : \"\"}\r\n      onClick={() => {\r\n        props.onSelected(track.id);\r\n      }}\r\n    >\r\n      {track.title}\r\n    </div>\r\n  ));\r\n\r\n  return <div>{tracksEls}</div>;\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function PlayWidget(props) {\r\n  const audioRef = useRef();\r\n  const [audInterval, setAudInterval] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <audio\r\n        controls\r\n        ref={audioRef}\r\n        src={props.currentTrack.url}\r\n        onPlay={() => {\r\n          let audi = setInterval(() => {\r\n            let progress =\r\n              audioRef.current.currentTime / audioRef.current.duration;\r\n\r\n            props.setCurProgress(progress);\r\n          }, 100);\r\n\r\n          setAudInterval(audi);\r\n        }}\r\n        onPause={() => {\r\n          clearInterval(audInterval);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function MusicVis(props) {\r\n  return (\r\n    <div>\r\n      <svg>\r\n        <circle r={props.size} cx=\"100\" cy=\"100\" fill=\"#555\" />\r\n        <circle\r\n          r={props.progress * props.size}\r\n          cx=\"100\"\r\n          cy=\"100\"\r\n          fill=\"#ffbd38\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport MusicList from \"./MusicList\";\r\nimport PlayWidget from \"./PlayWidget\";\r\nimport MusicVis from \"./MusicVis\";\r\n\r\nexport default function MusicPlayer(props) {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [curPlaying, setCurPlaying] = useState({});\r\n  const [curProgress, setCurProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"data/music.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setTracks(data);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Music player</h1>\r\n      <div>Now Playing: {curPlaying.title}</div>\r\n      <br />\r\n      <MusicList\r\n        tracks={tracks}\r\n        curPlaying={curPlaying}\r\n        onSelected={(id) => {\r\n          trackSelected(id);\r\n        }}\r\n      />\r\n      <br />\r\n      <PlayWidget currentTrack={curPlaying} setCurProgress={setCurProgress} />\r\n      <MusicVis size={50} progress={curProgress} />\r\n    </div>\r\n  );\r\n\r\n  //\"class methods\"\r\n  function trackSelected(id) {\r\n    //find that track\r\n    const foundTrack = tracks.find((track) => track.id == id);\r\n    //set it as the currently selected track - in this component\r\n    setCurPlaying(foundTrack);\r\n  }\r\n}\r\n","import \"./styles.css\";\nimport MusicPlayer from \"./MPlayer/MusicPlayer\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <MusicPlayer />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}